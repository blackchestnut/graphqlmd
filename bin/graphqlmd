#!/usr/bin/env ruby

require 'graphqlmd'
require 'optparse'

options = {
  url: 'http://localhost:3000/graphql',
  title: 'GraphQL API',
  note: nil,
  is_hide_client_mutation_id: true,
  is_hide_scalar: true,
  is_hide_deprecated: false,
  is_hide_table_of_contents: false,
  is_allow_links: true,
  is_vuepress: false,
  ignored_queries: [],
  ignored_mutations: [],
  ignored_objects: []
}


OptionParser.new do |opts|
  opts.banner = 'Usage: graphqlmd [options]'

  opts.on_tail '-v', '--version', 'Show version' do
    puts "graphqlmd v#{Graphqlmd::VERSION}"
    exit
  end

  opts.on(
    '-u', '--url [URL]', "GraphQL schema url (default: #{options[:url]})"
  ) do |url|
    options[:url] = url
  end

  opts.on(
    '-t', '--title [TITLE]', "Title (default: #{options[:title]})"
  ) do |title|
    options[:title] = title
  end

  opts.on '--note [NOTE]', 'Text after title (default: nil)' do |note|
    options[:note] = note
  end

  opts.on '--no-deprecated', 'Do not add deprecated objects, fields, args and etc.' do
    options[:is_hide_deprecated] = true
  end

  opts.on '--no-links', 'Do not add links with anchors to docs' do
    options[:is_allow_links] = false
  end

  opts.on '--no-table-of-contents', 'Do not add table of contents' do
    options[:is_hide_table_of_contents] = true
  end

  opts.on '--client-mutation-id', 'Add clientMutationId to docs' do
    options[:is_hide_client_mutation_id] = false
  end

  opts.on '--scalar', 'Add scalar objects to docs' do
    options[:is_hide_scalar] = false
  end

  opts.on '--vuepress', 'Use vuepress additional styles' do
    options[:is_vuepress] = true
  end

  opts.on '--ignored-queries a,b,c', Array, 'List of ignored and skipped Queries' do |list|
    options[:ignored_queries] = list
  end

  opts.on '--ignored-mutations a,b,c', Array, 'List of ignored and skipped Mutations' do |list|
    options[:ignored_mutations] = list
  end

  opts.on '--ignored-objects a,b,c', Array, 'List of ignored and skipped Objects' do |list|
    options[:ignored_objects] = list
  end

  opts.on_tail '-h', '--help', 'Show this message' do
    puts opts
    exit
  end
end.parse!

::Graphqlmd::Graphqlmd.new(options).call
